/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    out_usb: out_usb {
        compatible = "zmk,output-usb";
    };

    out_bluetooth: out_bluetooth {
        compatible = "zmk,output-bluetooth";
    };

    output_select: behavior_output_selector {
        compatible = "zmk,behavior-output-selector";
        #binding-cells = <1>;
    };

    outputs {
        compatible = "zmk,output-selector";
        input = <&output_select>;
        outputs = <&out_usb>, <&out_bluetooth>;
    };

    chosen {
        zmk,output-selector = &output_select;
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
    bindings = <
        &kp ESC    &kp Q       &kp W       &kp E        &kp R        &kp T          &kp Y           &kp U        &kp I         &kp O          &kp P   
        &kp TAB    &kp A       &kp S       &kp D        &kp F        &kp G          &kp H           &kp J        &kp K         &kp L          &mt SEMI SQT
        &kp LSHFT  &kp Z       &kp X       &kp C        &kp V        &kp B          &kp N           &kp M        &kp COMMA     &mt MINUS DOT  &mt BSLH FSLH  
        &mo 1      &none       &kp LCTRL   &kp LALT     &none        &kp SPACE      &mt RGUI SPACE  &none        &kp RET       &mt DEL BSPC   
    >;
};


                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC        &kp N1       &kp N2       &kp N3       &kp N4       &kp N5          &kp N6          &kp N7       &kp N8         &kp N9         &kp N0   
   &kp TAB        &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT       &kp CARET       &kp SEMI     &kp PLUS       &kp UP         &mt MINUS DOT 
   &kp LSHFT      &kp TILDE    &kp GRAVE    &kp AMPS     &kp LPAR     &kp RPAR        &kp LBKT        &kp RBKT     &kp LEFT       &kp DOWN       &kp RIGHT 
   &mo 1          &none        &mo 2        &kp LALT     &none        &kp SPACE       &mt RGUI SPACE  &none        &mt RCTRL RET  &mt DEL BSPC                               
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &bootloader     &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans        &kp F12        &kp C_VOL_DN   &kp C_VOL_UP   &kp C_PREV       &kp C_NEXT       &kp C_PP 
   &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_PRV    &bt BT_NXT     &kp LEFT       &kp UP         &msc SCRL_DOWN   &mmv MOVE_UP     &msc SCRL_UP 
   &bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans         &kp RIGHT      &kp DOWN       &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT
   &trans          &none         &trans        &trans        &none         &mkp LCLK      &mkp LCLK      &none          &mkp RCLK        &mkp MCLK
                        >;
                };
        };
};  
